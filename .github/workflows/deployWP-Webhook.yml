name: Build, Push, and Deploy Create Availability

on:
  push:
    branches: [ "QA" ]
    paths:
      - "BACKEND/weekly-planner/webhooks**"  # Cambios en esta carpeta activan el pipeline

jobs:
  build-and-push-wp-webhook:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with: 
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build Docker image
      run: |
        cd BACKEND/weekly-planner/webhooks
        docker build \
          --label "commit_sha=${{ github.sha }}" \
          -t ${{ secrets.DOCKER_USERNAME }}/wpwebhook-microservices:latest .

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/wpwebhook-microservices:latest

  deploy-WP-webhook:
      needs: build-and-push-WP-webhook
      runs-on: ubuntu-latest
      steps:
        - name: Set permissions for private key
          run: |
            echo "${{ secrets.AWS_EC2_KEY }}" > key.pem
            chmod 600 key.pem
  
        - name: Deploy Docker Container on AWS
          run: |
            ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.AWS_EC2_HOST_M6 }} << EOF
            sudo yum update -y
            if ! command -v docker &> /dev/null; then
              sudo yum install -y docker
            fi
            sudo systemctl start docker
            sudo systemctl enable docker
            
            sudo docker stop wpwebhook-microservices || true
            sudo docker rm wpwebhook-microservices || true
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/wpwebhook-microservices:latest
            sudo docker run -d -p 3030:3030 \
            --name wpwebhook-microservices \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_HOST=${{ secrets.DB_HOST }} \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e WEBHOOK_URL=${{ secrets.WEBHOOK_URL }} \
            ${{ secrets.DOCKER_USERNAME }}/wpwebhook-microservices:latest
            
            sudo docker ps -a
            EOF