name: Build, Push, and Deploy Docker Images (QA)

on:
  push:
    branches: [ "QA" ]
    paths:
      - "BACKEND/Calculadora/**"
      - "BACKEND/exam-reminder-service/**"
      - "BACKEND/file-management/delete-service/**"
      - "BACKEND/file-management/frontend/**"
      - "BACKEND/file-management/search-service/**"
      - "BACKEND/file-management/upload-service/**"
      - "BACKEND/link-management/delete-link-service/**"
      - "BACKEND/link-management/frontend/**"
      - "BACKEND/link-management/save-link-service/**"
      - "BACKEND/maestro-service/**"
      - "BACKEND/tareas-service/**"     
      - "BACKEND/weekly-planner/services/create_service/**"  
      - "BACKEND/weekly-planner/services/delete_services/**"   
      - "BACKEND/weekly-planner/services/read_services/**"   
      - "BACKEND/weekly-planner/services/update_services/**"   
      - "BACKEND/weekly-planner/webhooks/**"   
      - "BACKEND/user-auth-microservices/**"  
      - "frontend/**"   

jobs:
  check-paths:
    runs-on: ubuntu-latest
    outputs:
      calculadora: ${{ steps.filter.outputs.calculadora }}
      wp_create: ${{ steps.filter.outputs.wp_create }}
      wp_delete: ${{ steps.filter.outputs.wp_delete }}
      wp_read: ${{ steps.filter.outputs.wp_read }}
      wp_update: ${{ steps.filter.outputs.wp_update }}
      wp_webhook: ${{ steps.filter.outputs.wp_webhook }}
      exam_reminder: ${{ steps.filter.outputs.exam_reminder }}
      fm_delete: ${{ steps.filter.outputs.fm_delete }}
      fm_frontend: ${{ steps.filter.outputs.fm_frontend }}
      fm_search: ${{ steps.filter.outputs.fm_search }}
      fm_upload: ${{ steps.filter.outputs.fm_upload }}
      lm_delete: ${{ steps.filter.outputs.lm_delete }}
      lm_frontend: ${{ steps.filter.outputs.lm_frontend }}
      lm_save: ${{ steps.filter.outputs.lm_save }}
      maestro: ${{ steps.filter.outputs.maestro }}
      student: ${{ steps.filter.outputs.student }}
      tareas: ${{ steps.filter.outputs.tareas }}
      auth: ${{ steps.filter.outputs.auth }}
      frontend: ${{ steps.filter.outputs.frontend }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Filter changes
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            calculadora:
              - "BACKEND/Calculadora/**"
            wp_create:
              - "BACKEND/weekly-planner/services/create_service/**"
            wp_delete:
              - "BACKEND/weekly-planner/services/delete_services/**"
            wp_read:
              - "BACKEND/weekly-planner/services/read_services/**"
            wp_update:
              - "BACKEND/weekly-planner/services/update_services/**"
            wp_webhook:
              - "BACKEND/weekly-planner/webhooks/**"
            exam_reminder:
              - "BACKEND/exam-reminder-service/**"
            fm_delete:
              - "BACKEND/file-management/delete-service/**"
            fm_frontend:
              - "BACKEND/file-management/frontend/**"
            fm_search:
              - "BACKEND/file-management/search-service/**"
            fm_upload:
              - "BACKEND/file-management/upload-service/**"
            lm_delete:
              - "BACKEND/link-management/delete-link-service/**"
            lm_frontend:
              - "BACKEND/link-management/frontend/**"
            lm_save:
              - "BACKEND/link-management/save-link-service/**"
            maestro:
              - "BACKEND/maestro-service/**"
            tareas:
              - "BACKEND/tareas-service/**"
            auth:
              - "BACKEND/user-auth-microservices/**"
            frontend:
              - "frontend/**"

# -------------------------------------CALCULADORA--------------------------------------------#
# -------------------------------------CALCULADORA--------------------------------------------#
  build-and-push-Calculadora:
    needs: check-paths
    if: needs.check-paths.outputs.calculadora == 'true'
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          cd BACKEND/Calculadora
          docker build \
            --label "commit_sha=${{ github.sha }}" \
            -t ${{ secrets.DOCKER_USERNAME }}/calculator-microservices:latest .

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/calculator-microservices:latest

  deploy-Calculadora:
    needs: build-and-push-Calculadora
    runs-on: ubuntu-latest
    if: needs.check-paths.outputs.calculadora == 'true'
    steps:
      - name: Set permissions for private key
        run: |
          echo "${{ secrets.AWS_EC2_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Deploy Docker Container on AWS
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.AWS_EC2_HOST_M1 }} << EOF
          sudo yum update -y
          if ! command -v docker &> /dev/null; then
            sudo yum install -y docker
          fi
          sudo systemctl start docker
          sudo systemctl enable docker
          
          sudo docker stop calculator-microservices || true
          sudo docker rm calculator-microservices || true
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/calculator-microservices:latest
          sudo docker run -d -p 3010:3010 --name calculator-microservices ${{ secrets.DOCKER_USERNAME }}/calculator-microservices:latest
          
          sudo docker ps -a
          EOF
# -------------------------------------LINK MANAGEMENT--------------------------------------------#
# -------------------------------------lm-delete--------------------------------------------#
  build-and-push-lm-delete:
    needs: check-paths
    if: needs.check-paths.outputs.lm-delete == 'true'
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          cd BACKEND/file-management/delete-link-service 
          docker build \
            --label "commit_sha=${{ github.sha }}" \
            -t ${{ secrets.DOCKER_USERNAME }}/lm-delete-microservices:latest .

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/lm-delete-microservices:latest

  deploy-lm-delete:
    needs: build-and-push-lm-delete
    runs-on: ubuntu-latest
    if: needs.check-paths.outputs.lm-delete == 'true'
    steps:
      - name: Set permissions for private key
        run: |
          echo "${{ secrets.AWS_EC2_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Deploy Docker Container on AWS
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.AWS_EC2_HOST_M12 }} << "EOF"
          sudo yum update -y
          if ! command -v docker &> /dev/null; then
            sudo yum install -y docker
          fi
          sudo systemctl start docker
          sudo systemctl enable docker

          sudo docker stop lm-delete-microservices || true
          sudo docker rm lm-delete-microservices || true
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/lm-delete-microservices:latest
          sudo docker run -d -p 8089:8089 --name lm-delete-microservices ${{ secrets.DOCKER_USERNAME }}/lm-delete-microservices:latest

          sudo docker ps -a
          EOF
# -------------------------------------lm-frontend--------------------------------------------#
  build-and-push-lm-frontend:
    needs: check-paths
    if: needs.check-paths.outputs.lm-frontend == 'true'
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          cd BACKEND/file-management/frontend 
          docker build \
            --label "commit_sha=${{ github.sha }}" \
            -t ${{ secrets.DOCKER_USERNAME }}/lm-frontend-microservices:latest .

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/lm-frontend-microservices:latest

  deploy-lm-frontend:
    needs: build-and-push-lm-frontend
    runs-on: ubuntu-latest
    if: needs.check-paths.outputs.lm-frontend == 'true'
    steps:
      - name: Set permissions for private key
        run: |
          echo "${{ secrets.AWS_EC2_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Deploy Docker Container on AWS
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.AWS_EC2_HOST_M13 }} << "EOF"
          sudo yum update -y
          if ! command -v docker &> /dev/null; then
            sudo yum install -y docker
          fi
          sudo systemctl start docker
          sudo systemctl enable docker

          sudo docker stop lm-frontend-microservices || true
          sudo docker rm lm-frontend-microservices || true
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/lm-frontend-microservices:latest
          sudo docker run -d -p 8087:8087 --name lm-frontend-microservices ${{ secrets.DOCKER_USERNAME }}/lm-frontend-microservices:latest

          sudo docker ps -a
          EOF
# -------------------------------------lm-save--------------------------------------------#
  build-and-push-lm-save:
    needs: check-paths
    if: needs.check-paths.outputs.lm-save == 'true'
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          cd BACKEND/file-management/save-link-service 
          docker build \
            --label "commit_sha=${{ github.sha }}" \
            -t ${{ secrets.DOCKER_USERNAME }}/lm-save-microservices:latest .

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/lm-save-microservices:latest

  deploy-lm-save:
    needs: build-and-push-lm-save
    runs-on: ubuntu-latest
    if: needs.check-paths.outputs.lm-save == 'true'
    steps:
      - name: Set permissions for private key
        run: |
          echo "${{ secrets.AWS_EC2_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Deploy Docker Container on AWS
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.AWS_EC2_HOST_M14 }} << "EOF"
          sudo yum update -y
          if ! command -v docker &> /dev/null; then
            sudo yum install -y docker
          fi
          sudo systemctl start docker
          sudo systemctl enable docker

          sudo docker stop lm-save-microservices || true
          sudo docker rm lm-save-microservices || true
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/lm-save-microservices:latest
          sudo docker run -d -p 8085:8085 --name lm-save-microservices ${{ secrets.DOCKER_USERNAME }}/lm-save-microservices:latest

          sudo docker ps -a
          EOF