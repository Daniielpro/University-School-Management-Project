name: Build, Push, and Deploy Docker Images (QA)

on:
  push:
    branches: [ "QA" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
steps:
    # Paso 1: Verificar el código
    - name: Checkout code
      uses: actions/checkout@v2

    # Paso 2: Configurar Docker Buildx (para soporte multiplataforma)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Paso 3: Iniciar sesión en Docker Hub usando las credenciales almacenadas en GitHub Secrets
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Paso 4: Construir y etiquetar la imagen Docker
    - name: Build and Tag Docker Image
      run: |
        docker build --label "commit_sha=${{ github.sha }}" -t ${{ secrets.DOCKER_USERNAME }}/user-auth-microservices:latest -f BACKEND/user-auth-microservices/Dockerfile .

    # Paso 5: Subir la imagen Docker al repositorio de Docker Hub
    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/user-auth-microservices:latest
  deploy-aws:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Configurar la clave privada para AWS EC2
      - name: Set permissions for private key
        run: |
          echo "${{ secrets.AWS_EC2_KEY }}" > key.pem
          chmod 600 key.pem

      # Paso 2: Actualizar e instalar Docker en la instancia EC2 (Instancia 1)
      - name: Update system and install Docker (Instance 1)
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.AWS_EC2_HOST_QA1 }} << 'EOF'
          sudo yum update -y
          if ! command -v docker &> /dev/null
          then
            echo "Docker not found, installing..."
            sudo yum install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
          else
            echo "Docker is already installed."
          fi
          sudo systemctl start docker
          sudo systemctl enable docker
          EOF

      # Paso 3: Desplegar el contenedor Docker en la instancia EC2 (Instancia 1)
      - name: Deploy Docker Container (Instance 1)
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.AWS_EC2_HOST_QA1 }} << 'EOF'
          sudo docker stop user-auth-microservices || true
          sudo docker rm user-auth-microservices || true
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/user-auth-microservices:latest
          sudo docker run -d \
            -p 3000:3000 \
            --name user-auth-microservices \
            --env-file .env \
            ${{ secrets.DOCKER_USERNAME }}/user-auth-microservices:latest
          EOF