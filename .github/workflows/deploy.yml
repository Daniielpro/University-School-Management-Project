name: Build, Push, and Deploy Docker Images (QA)

on:
  push:
    branches: [ "QA" ]
    paths:
      - "BACKEND/Calculadora/**"
      - "BACKEND/weekly-planner/services/create_service/**"

jobs:
  check-paths:
    runs-on: ubuntu-latest
    outputs:
      calculadora: ${{ steps.filter.outputs.calculadora }}
      wp_create: ${{ steps.filter.outputs.wp_create }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Filter changes
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            calculadora:
              - "BACKEND/Calculadora/**"
            wp_create:
              - "BACKEND/weekly-planner/services/create_service/**"
  # -------------------------------------CALCULADORA--------------------------------------------#
  build-and-push-Calculadora:
    needs: check-paths
    if: needs.check-paths.outputs.calculadora == 'true'
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          cd Calculadora
          docker build \
            --label "commit_sha=${{ github.sha }}" \
            -t ${{ secrets.DOCKER_USERNAME }}/calculator-microservices:latest .

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/calculator-microservices:latest

  deploy-Calculadora:
    needs: build-and-push-Calculadora
    runs-on: ubuntu-latest
    if: needs.check-paths.outputs.calculadora == 'true'
    steps:
      - name: Set permissions for private key
        run: |
          echo "${{ secrets.AWS_EC2_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Deploy Docker Container on AWS
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.AWS_EC2_HOST_QA1 }} << "EOF"
          sudo yum update -y
          if ! command -v docker &> /dev/null; then
            sudo yum install -y docker
          fi
          sudo systemctl start docker
          sudo systemctl enable docker
          
          sudo docker stop calculator-microservices || true
          sudo docker rm calculator-microservices || true
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/calculator-microservices:latest
          sudo docker run -d -p 3010:3010 --name calculator-microservices ${{ secrets.DOCKER_USERNAME }}/calculator-microservices:latest
          
          sudo docker ps -a
          EOF
  # -------------------------------------wekkly-planner--------------------------------------------#
    # -------------------------------------create--------------------------------------------#
  build-and-push-WP-create:
    needs: check-paths
    if: needs.check-paths.outputs.wp_create == 'true'
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          cd weekly-planner/services/create_service/app 
          docker build \
            --label "commit_sha=${{ github.sha }}" \
            -t ${{ secrets.DOCKER_USERNAME }}/wpcreate-microservices:latest .

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/wpcreate-microservices:latest

  deploy-WP-create:
    needs: build-and-push-WP-create
    runs-on: ubuntu-latest
    if: needs.check-paths.outputs.wp_create == 'true'
    steps:
      - name: Set permissions for private key
        run: |
          echo "${{ secrets.AWS_EC2_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Deploy Docker Container on AWS
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@${{ secrets.AWS_EC2_HOST_QA2 }} << "EOF"
          sudo yum update -y
          if ! command -v docker &> /dev/null; then
            sudo yum install -y docker
          fi
          sudo systemctl start docker
          sudo systemctl enable docker
          
          sudo docker stop wpcreate-microservices || true
          sudo docker rm wpcreate-microservices || true
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/wpcreate-microservices:latest
          sudo docker run -d -p 3020:3020 --name wpcreate-microservices ${{ secrets.DOCKER_USERNAME }}/wpcreate-microservices:latest
          
          sudo docker ps -a
          EOF
