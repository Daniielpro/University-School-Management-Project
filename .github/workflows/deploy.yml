name: Build, Push, and Deploy Docker Images (QA)

on:
  push:
    branches: [ "QA" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      # Paso 1: Checkout del cÃ³digo 
      - name: Checkout Code
        uses: actions/checkout@v3

      # Paso 2: Login en Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Paso 3: Cambiar al directorio del Dockerfile y construir la imagen
      - name: Build Docker image
        run: |
          cd BACKEND/user-auth-microservices
          docker build \
            --label "commit_sha=${{ github.sha }}" \
            -t ${{ secrets.DOCKER_USERNAME }}/user-auth-microservices:latest .

      # Paso 4: Subir la imagen Docker a Docker Hub 
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/user-auth-microservices:latest

  deploy-aws:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Configurar la clave privada para AWS EC2
      - name: Set permissions for private key
        run: |
          echo "${{ secrets.AWS_EC2_KEY }}" > miclave.pem
          chmod 600 miclave.pem

      # Paso 3: Actualizar e instalar Docker en la instancia EC2 (Instancia 1)
      - name: Update system and install Docker (Instance 1)
        run: |
          ssh -o StrictHostKeyChecking=no -i miclave.pem ec2-user@${{ secrets.AWS_EC2_HOST_QA1 }} "sudo yum update -y"
          ssh -o StrictHostKeyChecking=no -i miclave.pem ec2-user@${{ secrets.AWS_EC2_HOST_QA1 }} "if ! command -v docker &> /dev/null; then echo 'Docker not found, installing...'; sudo yum install -y docker; sudo systemctl start docker; sudo systemctl enable docker; else echo 'Docker is already installed.'; fi"
      
      # Paso 4: Desplegar el contenedor Docker en la instancia EC2 (Instancia 1)
      - name: Deploy Docker Container (Instance 1)
        run: |
          ssh -o StrictHostKeyChecking=no -i miclave.pem ec2-user@${{ secrets.AWS_EC2_HOST_QA1 }} "sudo docker stop user-auth-microservices || true"
          ssh -o StrictHostKeyChecking=no -i miclave.pem ec2-user@${{ secrets.AWS_EC2_HOST_QA1 }} "sudo docker rm user-auth-microservices || true"
          ssh -o StrictHostKeyChecking=no -i miclave.pem ec2-user@${{ secrets.AWS_EC2_HOST_QA1 }} "sudo docker pull ${{ secrets.DOCKER_USERNAME }}/user-auth-microservices:latest"
          ssh -o StrictHostKeyChecking=no -i miclave.pem ec2-user@${{ secrets.AWS_EC2_HOST_QA1 }} "sudo docker run -d -p 3000:3000 --name user-auth-microservices --env-file /home/ec2-user/.env ${{ secrets.DOCKER_USERNAME }}/user-auth
